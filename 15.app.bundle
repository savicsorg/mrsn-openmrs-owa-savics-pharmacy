webpackJsonp([15],{

/***/ 53:
/***/ (function(module, exports) {

	'use strict';

	angular.module('RouteController', []).controller('RouteController', ['$scope', '$state', '$stateParams', '$rootScope', '$mdToast', 'openmrsRest', function ($scope, $state, $stateParams, $rootScope, $mdToast, openmrsRest) {
	    $scope.rootscope = $rootScope;
	    $scope.appTitle = "Gestion des routes";
	    $scope.resource = "savicspharmacy";
	    //Breadcrumbs properties
	    $rootScope.links = { "Pharmacy management module": "", "Route": "routes", "New": "route" };

	    var vm = this;
	    vm.appTitle = "New route entry";

	    var type = "";
	    var msg = "";

	    if ($stateParams.uuid) {
	        //we are in edit mode
	        vm.route = $stateParams;
	        vm.appTitle = "Edit type entry";
	    }

	    $scope.route = function () {

	        if (!vm.route || !vm.route.code || !vm.route.name) {
	            type = "error";
	            msg = "Please check if your input are valid ones.";
	            showToast(msg, type);
	            return;
	        }
	        document.getElementById("loading_submit").style.visibility = "visible";

	        var payload = $stateParams.uuid ? { name: vm.route.name, code: vm.route.code, uuid: vm.route.uuid } : { name: vm.route.name, code: vm.route.code };

	        if ($stateParams.uuid) {
	            openmrsRest.update($scope.resource + "/route", payload).then(function (response) {
	                handleResponse(response);
	            }).catch(function (e) {
	                handleResponse(response, e);
	            });
	        } else {
	            openmrsRest.create($scope.resource + "/route", payload).then(function (response) {
	                handleResponse(response);
	            }).catch(function (e) {
	                handleResponse(response, e);
	            });
	        }
	    };

	    function handleResponse(response) {
	        var e = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

	        document.getElementById("loading_submit").style.visibility = "hidden";
	        if (e) {
	            type = "error";
	            msg = e.data.error.message;
	            showToast(msg, type);
	            return;
	        }
	        if (response.uuid) {
	            type = "success";
	            msg = $stateParams.uuid ? response.name + " is Well edited." : response.name + " is Well saved.";
	            vm.route.name = "";
	            vm.route.code = "";
	        } else {
	            type = "error";
	            msg = "we can't save your data.";
	        }
	        showToast(msg, type);
	    }

	    function showToast(msg, type) {
	        if (type != "error") {
	            $state.go('home.routes');
	        }
	        $mdToast.show($mdToast.simple().content(msg).theme(type + "-toast").position('top right').hideDelay(3000)).then(function () {
	            $log.log('Toast dismissed.');
	        }).catch(function () {
	            $log.log('Toast failed or was forced to close early by another toast.');
	        });
	    }
	}]);

/***/ })

});